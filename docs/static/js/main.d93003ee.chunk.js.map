{"version":3,"sources":["firebase/firebase-config.js","types/types.js","actions/uiAction.js","actions/notesAction.js","components/notes/NotesAppBar.js","hooks/useForm.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","actions/authAction.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","static/loading.gif","components/auth/LoadingScreen.js","components/responsive/SidebarResponsive.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","types","setUiError","msg","type","payload","removeUiError","startLoading","finishLoading","activeNote","id","note","setNote","notes","startSaveNote","dispatch","getState","a","uid","noteToFirestore","doc","update","refreshNote","Swal","fire","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","console","log","confirmDelete","isDelete","title","icon","confirmButtonText","showCancelButton","then","result","isConfirmed","delete","deleteNote","NotesAppBar","useDispatch","active","useSelector","className","moment","format","style","display","name","onChange","e","target","files","text","allowOutsideClick","didOpen","showLoading","fileUrl","urlImage","close","startUploadingFile","onClick","document","querySelector","click","useForm","initialState","useState","values","setValues","reset","newNote","handleInputChange","value","NoteScreen","date","formValues","activeId","useRef","useEffect","current","placeholder","src","alt","NothingSelected","successSignIn","mixin","toast","position","showConfirmButton","timer","timerProgressBar","addEventListener","stopTimer","resumeTimer","confirmLogout","signOut","logout","login","displayName","JournalEntry","noteDate","url","backgroundSize","backgroundImage","JournalEntries","map","entry","Sidebar","Date","getTime","collection","add","docRef","push","startNewNote","LoadingScreen","logo","props","JournalScreen","loading","ui","tamanio","window","innerWidth","SidebarResponsive","pageWrapId","outerContainerId","LoginScreen","email","password","handleImputChange","isFormValid","validator","isEmail","length","onSubmit","preventDefault","signInWithEmailAndPassword","user","catch","err","message","startLoginEmailPassword","autoComplete","disabled","signInWithPopup","to","RegisterScreen","password2","trim","createUserWithEmailAndPassword","updateProfile","starRegisterWithPasswordName","AuthRouter","exact","path","component","PrivateRoute","isLogedIn","Component","rest","PublicRoute","AppRouter","checking","setChecking","setIsLogedIn","onAuthStateChanged","get","notesDB","forEach","noteHijo","data","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","state","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d93003ee.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBfMBcu80e53dwuJbPJfbB-yp9B_qu_8QI\",\n    authDomain: \"react-app-cursos-3017f.firebaseapp.com\",\n    projectId: \"react-app-cursos-3017f\",\n    storageBucket: \"react-app-cursos-3017f.appspot.com\",\n    messagingSenderId: \"896932484798\",\n    appId: \"1:896932484798:web:85264635dd2f74b67e30ef\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  const db = firebase.firestore();\n  const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\n  export {\n      db,\n      googleAuthProvider,\n      firebase\n  }","\n\nexport const types = {\n    login: '[Auth] Loggin',\n    logout: '[Auth] Logout',\n\n    uiSetError: '[UI] Set Error',\n    uiRemoveError: '[UI] Remove Error',\n\n    uiStartLoading: '[UI] Start loading',\n    uiFinishLoading: '[UI] Finish loading',\n\n    notesAddNew: '[Notes] Add new note',\n    notesActive: '[Notes] Set Active note',\n    notesLoad: '[Notes] Load notes',\n    notesUpdated: '[Notes] Update note',\n    notesFileUrl: '[Notes] Update image url',\n    notesDelete: '[Notes] Note deleted',\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\n}","import { types } from '../types/types';\n\nexport const setUiError = (msg) => {\n    return {\n        type: types.uiSetError,\n        payload: msg\n    }\n}\n\nexport const removeUiError = () => {\n    return {\n        type: types.uiRemoveError\n    }\n}\n\nexport const startLoading = () =>{\n    return{\n        type: types.uiStartLoading\n    }\n}\n\nexport const finishLoading = () =>{\n    return{\n        type: types.uiFinishLoading\n    }\n}","import Swal from 'sweetalert2';\nimport { db } from '../firebase/firebase-config';\nimport { types } from '../types/types';\nimport { finishLoading, startLoading } from './uiAction';\n\nexport const startNewNote = ( notes ) =>{\n    return async( dispatch, getState ) =>{        \n        const { uid } = getState().auth;\n\n        const newNote = {\n            title: '',\n            body: '',\n            date: new Date().getTime(),\n            urlImage: ''\n        }\n        const docRef =  await db.collection(`${uid}/journal/notes`).add(newNote);\n        dispatch( activeNote( docRef.id, newNote ) );\n        newNote.id = docRef.id;\n        notes.push( newNote );\n    }\n}\n\n\nexport const activeNote = (id, note) =>{\n    return {\n        type: types.notesActive,\n        payload: {\n            id,\n            ...note,\n        }\n    }\n}\n\n\nexport const loadNotes = ( uid ) =>{\n    return async ( dispatch ) => {\n        dispatch( startLoading() );\n        const notesDB = await db.collection(`${uid}/journal/notes`).get();\n        const notes = [];\n        notesDB.forEach( noteHijo => {\n            notes.push( {\n                id: noteHijo.id,\n                title: noteHijo.data().title,\n                body: noteHijo.data().body,\n                date: noteHijo.data().date,\n                urlImage: noteHijo.data().urlImage,\n            } )\n        } )\n        dispatch( setNote( notes ) );\n        dispatch( finishLoading() );\n    }\n}\n\nexport const setNote = ( notes ) =>{\n    return {\n        type: types.notesLoad,\n        payload: notes\n    }\n}\n\n\nexport const startSaveNote = ( note ) => {\n    return async( dispatch, getState ) => {\n        const { uid } = getState().auth;\n\n        const noteToFirestore = {...note};\n        delete noteToFirestore.id;\n        \n        await db.doc(`${uid}/journal/notes/${note.id}`).update( noteToFirestore );\n\n        dispatch( refreshNote( note.id, noteToFirestore ) );\n        Swal.fire('Note Saved', '', 'success');\n    }\n}\n\nexport const refreshNote = ( id, note ) =>{\n    return {\n        type: types.notesUpdated,\n        payload: {\n            id,\n            note: {\n                id,\n                ...note\n            }\n        }\n    }\n}\n\nexport const startUploadingFile = ( file ) => {\n    return  async ( dispatch, getState ) => {\n        const { active } = getState().notes;\n        \n        Swal.fire({\n            title: 'Uploading image.',\n            text: 'Please wait.',\n            allowOutsideClick: false,\n            didOpen: () => {\n                Swal.showLoading()\n            }\n        });\n\n        const fileUrl = await fileUpload( file );\n        active.urlImage = fileUrl;\n        \n        dispatch( startSaveNote(active) );\n        \n        Swal.close();\n    }\n}\n\nexport const fileUpload = async( file ) =>{\n    const urlCloudinary = '\thttps://api.cloudinary.com/v1_1/dziczfi4f/upload';\n    const formData = new FormData();\n    formData.append('upload_preset','react-journal');\n    formData.append('file', file );\n    try {\n        const resp = await fetch( urlCloudinary, {\n            method: 'POST',\n            body: formData\n        } );\n\n        if ( resp.ok ) {\n            const cloudResp = await resp.json();\n            return cloudResp.secure_url;\n        }else{\n            throw await resp.json();\n        }\n    } catch (error) {\n        console.log(error);    \n    }\n}\n\nexport const startDelete = ( id ) =>{\n    return async( dispatch, getState ) =>{\n        const { uid } = getState().auth;\n        confirmDelete(dispatch, uid, id );\n    }\n}\n\nconst confirmDelete = (dispatch, uid, id) => {\n    let isDelete = false;\n    Swal.fire({\n        title: 'You\\'ll not able to recover this note.',\n        icon: 'warning',\n        confirmButtonText: 'Delete',\n        showCancelButton: true,\n    }).then((result) => {\n        isDelete = result.isConfirmed;\n        if (result.isConfirmed) {\n            db.doc(`${uid}/journal/notes/${id}`).delete();\n            dispatch( deleteNote( id ) );\n            Swal.fire('Deleted!', '', 'success');\n        }\n    })\n    return isDelete;\n}\n\nexport const deleteNote = ( id ) =>{\n    return{\n        type: types.notesDelete,\n        payload: id \n    }\n}\n\n\nexport const noteLogout = () =>{\n    return{\n        type: types.notesLogoutCleaning\n    }\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\nimport { startDelete, startSaveNote, startUploadingFile } from '../../actions/notesAction';\n\nexport const NotesAppBar = () => {\n\n    const dispatch = useDispatch();\n    const {active} = useSelector( ({ notes }) => notes );\n\n    const handleSaveNote = () =>{\n        dispatch( startSaveNote( active ) );\n    }\n\n    const handlePicture = () =>{\n        document.querySelector('#selectFile').click();\n    }\n\n    const handleSelectFile = (e) =>{\n        const file = e.target.files[0];\n        if ( file ) {\n            dispatch( startUploadingFile( file ) );\n        }\n    }\n\n    const handleDelete = () => {\n        dispatch( startDelete( active.id ) );\n    }\n\n    return (\n        <div className='notes__appbar'>\n            <span className='notes__date_appbar'> { moment().format(\"MMM Do YY\") } </span>\n\n            <input type='file' style={{display:'none'}} id='selectFile' name='file' onChange={handleSelectFile} />\n\n            <div>\n                {\n\n                }\n                <button className='btn btn-delete' onClick={ handleDelete } >Delete</button>\n                <button className='btn' onClick={ handlePicture } >Picture</button>\n                <button className='btn' onClick= { handleSaveNote } >Save</button>\n            </div>\n        </div>\n    )\n}\n","import { useState } from 'react'\n\nexport const useForm = (initialState = {}) => {\n    \n    const [values, setValues] = useState(initialState)\n    \n    const reset = ( newNote = initialState ) =>{\n        setValues( newNote );\n    }\n\n    const handleInputChange = ({target}) => {\n        setValues({\n            ...values,\n            [target.name]: target.value\n        });\n    }\n\n    return[values, handleInputChange, reset ];\n}","import React, { useEffect, useRef } from 'react';\nimport { NotesAppBar } from './NotesAppBar';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { useForm } from '../../hooks/useForm';\nimport { activeNote } from '../../actions/notesAction';\n\nexport const NoteScreen = () => {\n    \n    const dispatch = useDispatch();\n\n    const { active } = useSelector( ({notes}) => notes );\n    const [ formValues, handleInputChange, reset ] = useForm({\n        title: active.title,\n        body: active.body,\n        date: active.date,\n        urlImage: active.urlImage\n    });\n    const { title, body } = formValues;\n\n    //Para cambiar entre notas usamos esto a continuación, es muy importante para no generar bucles infinitos.\n    const activeId = useRef( active.id );\n    \n    useEffect(() => {\n        if ( activeId.current !== active.id ) {\n            reset( active );\n            activeId.current = active.id;\n        }\n        console.log(active.urlImage);\n    }, [ active, reset ]);\n    //Aca termina el cambio de nota\n\n    //para actualizar la nota activa:\n    useEffect(() => {\n        dispatch( activeNote( activeId.current, {...formValues} ) );\n    }, [ formValues, dispatch ]);\n    \n    return (\n        <div className='notes__main-content jounral__main-content animate__animated animate__fadeInRight'>\n            <NotesAppBar />\n\n            <div className='notes__content'>\n                \n                <input \n                    type='text' \n                    placeholder='Some awesome tittle' \n                    className='notes__title-input'\n                    name='title'\n                    value={title}\n                    onChange={handleInputChange} />\n                \n                <textarea \n                    placeholder='What happen today?' \n                    className='notes__textarea'\n                    name='body'\n                    value={body}\n                    onChange={handleInputChange} ></textarea>\n                \n                {\n                    active.urlImage === '' \n                    ? <img className='notes__image' src='https://i.pinimg.com/originals/06/71/9e/06719e446d9f1e81a60828add84563f9.jpg' alt='imagen' />\n                    :  <img className='notes__image' src={active.urlImage} alt='imagen' />\n                }\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const NothingSelected = () => {\n    return (\n        <div className='nothing__main-content'>\n            <p>\n                Select something\n                <br />\n                Or create an entry!\n            </p>\n\n            <i className='far fa-star fa-4x mt-5'></i>\n        </div>\n    )\n}\n","import Swal from 'sweetalert2';\n\nimport { types } from \"../types/types\";\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\nimport { finishLoading, startLoading } from \"./uiAction\";\nimport { noteLogout } from './notesAction';\n\nconst successSignIn = Swal.mixin({\n    toast: true,\n    position: 'top-end',\n    showConfirmButton: false,\n    timer: 3000,\n    timerProgressBar: true,\n    didOpen: (toast) => {\n        toast.addEventListener('mouseenter', Swal.stopTimer)\n        toast.addEventListener('mouseleave', Swal.resumeTimer)\n    }\n})\n\nconst confirmLogout = (dispatch) => {\n    Swal.fire({\n        title: 'You are loging out the app, are you sure?',\n        confirmButtonText: 'Logout',\n        icon: 'warning',\n        showCancelButton: true,\n    }).then((result) => {\n        /* Read more about isConfirmed, isDenied below */\n        if (result.isConfirmed) {\n            firebase.auth().signOut();\n            dispatch(logout());\n            dispatch( noteLogout() );\n            Swal.fire('Logout!', '', 'success');\n        }\n    })\n}\n\nexport const startLoginEmailPassword = (email, password) => {\n    return (dispatch) => {\n        dispatch(startLoading());\n        firebase.auth().signInWithEmailAndPassword(email, password).then(({ user }) => {\n            dispatch(login(user.uid, user.displayName));\n            dispatch(finishLoading());\n            successSignIn.fire({ icon: 'success', title: 'Signed in successfully' });\n        }).catch(err => {\n            Swal.fire('ERROR', err.message, 'error');\n            dispatch(finishLoading());\n        })\n    }\n}\n\n\nexport const starRegisterWithPasswordName = (name, email, password) => {\n    return (dispatch) => {\n        firebase.auth().createUserWithEmailAndPassword(email, password).then(async ({ user }) => {\n            await user.updateProfile({ displayName: name });\n            dispatch(login(user.uid, user.displayName));\n            successSignIn.fire({ icon: 'success', title: 'Signed in successfully' });\n        }).catch(e => {\n            Swal.fire('ERROR', e.message, 'error');\n        })\n    }\n}\n\nexport const startGoogleLogin = () => {\n    return (dispatch) => {\n        firebase.auth().signInWithPopup(googleAuthProvider).then(({ user }) => {\n            dispatch(login(user.uid, user.displayName));\n            successSignIn.fire({ icon: 'success', title: 'Signed in successfully' });\n        });\n    }\n}\n\nexport const login = (uid, displayName) => {\n    return {\n        type: types.login,\n        payload: {\n            uid,\n            displayName\n        }\n    }\n}\n\nexport const startLogout = (uid, displayName) => {\n    return async (dispatch) => {\n        confirmLogout(dispatch);\n    }\n}\n\n\nexport const logout = () => {\n    return {\n        type: types.logout\n    }\n}","import React from 'react';\nimport moment from 'moment';\nimport { useDispatch } from 'react-redux';\nimport { activeNote } from '../../actions/notesAction';\n\nexport const JournalEntry = ( {note} ) => {\n    \n    const dispatch = useDispatch();\n\n    const noteDate = moment(note.date);\n    let url = '';\n    note.urlImage !== '' ? (url = note.urlImage ) : (url = 'https://imagenesgratis.com.ar/wp-content/uploads/2020/03/river-plate-futbol-escudo-soccer-team-argentina-football-vertical-fondo-de-pantalla.jpg');\n    \n    const handleEntryClick = () => {\n        dispatch( activeNote( note.id, note ) );\n    }\n\n    return (\n        <div className='journal__entry pointer' onClick={handleEntryClick} >\n            <div \n                className='journal__entry-picture' \n                style={{backgroundSize: 'cover',\n                        backgroundImage: `url(${url})`}}>\n            </div>\n\n            <div className='jorunal__entry-body'>\n                <p className='journal__entry-title'>\n                    {note.title}\n                </p>\n                <p className='jorunal__entry-content'>\n                    {note.body}\n                </p>\n            </div>\n\n            <div className='jorunal__entry-date-box'>\n                <span> {noteDate.format('dddd')} </span>\n                <h4> {noteDate.format('Do')} </h4>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { JournalEntry } from './JournalEntry';\n\nexport const JournalEntries = () => {\n    \n    const {notes} = useSelector( ({ notes }) => notes );\n    \n    return (\n        <div className='journal__entries'>\n\n            {\n                notes.map( entry =>(\n                    <JournalEntry note = {entry} key={entry.id}/>\n                )\n                 )\n            }\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogout } from '../../actions/authAction';\nimport { startNewNote } from '../../actions/notesAction';\nimport { JournalEntries } from './JournalEntries'\n\nexport const Sidebar = () => {\n\n    const dispatch = useDispatch();\n\n    const { name } = useSelector(({ auth }) => auth);\n    const { notes } = useSelector(({ notes }) => notes);\n\n    const handleLogout = (e) => {\n        dispatch(startLogout());\n\n    }\n\n    const handleAddNewEntry = () => {\n        dispatch(startNewNote(notes));\n    }\n\n    return (\n        <aside className='journal__sidebar'>\n            <div className='journal__sidebar-navbar'>\n                <h3 className='mt-5'>\n                    <i className='far fa-moon'></i>\n                    <span> {name} </span>\n                </h3>\n\n                <button className='btn btn-logout' onClick={handleLogout}>\n                    Logout\n                </button>\n            </div>\n\n            <div className='journal__new-entry' onClick={handleAddNewEntry} >\n                <i className='far fa-calendar-plus fa-5x' />\n                <p className='mt-5' >\n                    New Entry\n                </p>\n            </div>\n\n            <JournalEntries />\n        </aside>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/loading.39ee2642.gif\";","import React from 'react';\nimport logo from '../../static/loading.gif';\n\nexport const LoadingScreen = () => {\n    return (\n        <div className='auth__main'>\n            <img src={ logo } alt = 'Loading' className='auth__loading-gif' />\n        </div>\n    )\n}\n","import React from 'react';\nimport { slide as Menu } from 'react-burger-menu';\nimport { Sidebar } from '../journal/Sidebar'\n\nexport default props => {\n    return (\n      // Pass on our props\n      <Menu {...props}>\n        <Sidebar />\n      </Menu>\n    );\n  };\n  ","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NoteScreen } from '../notes/NoteScreen';\nimport { NothingSelected } from './NothingSelected';\nimport { Sidebar } from './Sidebar';\nimport { LoadingScreen } from '../auth/LoadingScreen';\n\n\nimport \"../responsive/Sidebar.css\";\nimport SidebarResponsive from '../responsive/SidebarResponsive';\n\nexport const JournalScreen = () => {\n\n    const { active } = useSelector(({ notes }) => notes);\n    const { loading } = useSelector(({ ui }) => ui);\n\n    const tamanio = window.innerWidth;\n\n    return (\n        <div >    {\n            loading\n                ? <LoadingScreen />\n                : <div id=\"App\" className='jounral__main-content animate__animated animate__fadeIn animate__faster\t500ms'>\n                    \n                    {tamanio < 800 \n                    ? <>\n                    <SidebarResponsive pageWrapId={\"page-wrap\"} outerContainerId={\"App\"} />\n\n                    <div id=\"page-wrap\">\n                    </div>\n                    </> \n                    : \n                    <Sidebar />\n                    }\n\n                    <main>\n                        {\n                            active === null ? <NothingSelected /> : <NoteScreen />\n                        }\n                    </main>\n                </div>\n        }\n        </div>\n    )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport validator from 'validator';\nimport { useForm } from '../../hooks/useForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/authAction';\nimport { removeUiError, setUiError } from '../../actions/uiAction';\n\nexport const LoginScreen = () => {\n    \n    const dispatch = useDispatch();\n\n    const { loading } = useSelector(( {ui} ) => ui );\n\n    const [ formValues, handleImputChange ] = useForm({\n        email: 'rodrigo.rodriguez@gmail.com',\n        password: '123456'\n    });\n\n    const { email, password } = formValues;\n    \n    const handleLogin = (e) =>{\n        e.preventDefault();\n        if ( isFormValid() ) {\n            dispatch( startLoginEmailPassword(email, password) );    \n        }\n    }\n\n    const handleGoogleLogin = () =>{\n        dispatch ( startGoogleLogin() );\n    }\n\n    const isFormValid = () =>{\n        if (!validator.isEmail(email)) {\n            dispatch(setUiError('The email is not valid.'));\n            return false;\n        } else if (password.length < 6) {\n            dispatch(setUiError('Password should contain at least 6 character.'));\n            return false;\n        }\n        dispatch(removeUiError());\n        return true;\n    }\n\n    return (\n        <div className = 'animate__animated animate__fadeIn animate__faster\t500ms'> \n            <h3 className='auth__title'>Login</h3>\n \n            <form onSubmit={ handleLogin }>\n                <input type='text' placeholder='Email' name='email' className='auth__input' autoComplete='off' value = {email} onChange={handleImputChange} />\n                <input type='password' placeholder='Password' name='password' className='auth__input' value = {password} onChange={handleImputChange} />\n                <button type='submit' className='btn btn-primary btn-block' disabled={loading} > Login </button>\n\n                <div className='auth__social-networks'>\n                    <p>Login with social networks</p>\n                    <div className=\"google-btn\" onClick= { handleGoogleLogin }>\n                        <div className=\"google-icon-wrapper\">\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                        </div>\n                        <p className=\"btn-text\">\n                            <b>Sign in with google</b>\n                        </p>\n                    </div>\n                </div>\n\n                <Link to='/auth/register' className='link'>Crate a new account</Link>\n            </form>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useForm } from '../../hooks/useForm';\nimport validator from 'validator';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeUiError, setUiError } from '../../actions/uiAction';\nimport { starRegisterWithPasswordName } from '../../actions/authAction';\n\nexport const RegisterScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const { msg } = useSelector(({ ui }) => ui);\n\n    console.log(msg);\n\n    const [formValues, handleInputChange] = useForm({\n        name: 'Rodrigo',\n        email: 'rodrigo.rodriguez@gmail.com',\n        password: '123456',\n        password2: '123456'\n    });\n\n    const { name, email, password, password2 } = formValues;\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n        if (isFormValid()) {\n            dispatch(starRegisterWithPasswordName( name, email, password ));\n        }\n    }\n\n    const isFormValid = () => {\n        if ((name.trim().length === 0)) {\n            dispatch(setUiError('Name should contain at least 1 character.'));\n            return false;\n        } else if (!validator.isEmail(email)) {\n            dispatch(setUiError('The email is not valid.'));\n            return false;\n        } else if (password !== password2) {\n            dispatch(setUiError('The password should be equals.'));\n            return false;\n        } else if (password.length < 6) {\n            dispatch(setUiError('Password should contain at least 6 character.'));\n            return false;\n        }\n        dispatch(removeUiError());\n        return true;\n    }\n\n    return (\n        <div className='animate__animated animate__fadeIn animate__faster\t500ms'>\n            <h3 className='auth__title'>Register</h3>\n\n            <form onSubmit={handleRegister}>\n                {\n                    msg != null &&\n                    <div className='auth__alert-error'> {msg} </div>\n                }\n                <input type='text' placeholder='Name' name='name' className='auth__input' autoComplete='off' value={name} onChange={handleInputChange} />\n                <input type='text' placeholder='Email' name='email' className='auth__input' autoComplete='off' value={email} onChange={handleInputChange} />\n                <input type='password' placeholder='Password' name='password' className='auth__input' value={password} onChange={handleInputChange} />\n                <input type='password' placeholder='Confirm password' name='password2' className='auth__input' value={password2} onChange={handleInputChange} />\n                <button type='submit' className='btn btn-primary btn-block mb-5'> Register </button>\n\n                <Link to='/auth/login' className='link'>Already register?</Link>\n            </form>\n        </div>\n    )\n}\n","import React from 'react';\nimport {\n    Switch,\n    Route,\n    Redirect\n} from \"react-router-dom\";\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\n\nexport const AuthRouter = () => {\n    return (\n        <div className='auth__main'>\n            <div className='auth__box-container'>\n                <Switch>\n                    <Route exact path='/auth/login' component={LoginScreen} />\n                    <Route exact path='/auth/register' component={RegisterScreen} />\n\n                    <Redirect to='/auth/login' />\n                </Switch>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom'\n\nexport const PrivateRoute = ({\n    isLogedIn,\n    component: Component,\n    ...rest\n}) => {\n\n    // localStorage.setItem('lastPath', rest.location.pathname);\n\n    return (\n        <Route\n            {...rest}\n            component={ (props) => \n                ((isLogedIn) ? <Component {...props} /> : (<Redirect to='/auth' />))\n            }\n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isLogedIn: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom';\n\nexport const PublicRoute = ( {\n    isLogedIn,\n    component: Component,\n    ...rest\n} ) => {\n    return (\n        <Route\n            {...rest}\n            component= {(props) =>\n                (!(isLogedIn) ? <Component {...props} /> : (<Redirect to='/' />))\n             }>\n        </Route>\n    )\n}\n\n\nPublicRoute.propTypes = {\n    isLogedIn: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { firebase } from '../firebase/firebase-config';   \nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n} from \"react-router-dom\";\nimport { JournalScreen } from '../components/journal/JournalScreen';\nimport { AuthRouter } from './AuthRouter';\nimport { login } from '../actions/authAction';\nimport { LoadingScreen } from '../components/auth/LoadingScreen';\nimport { PrivateRoute } from './PrivateRoute'\nimport { PublicRoute } from './PublicRoute'\nimport { loadNotes } from '../actions/notesAction';\n\n\nexport const AppRouter = () => {\n    \n    const dispatch = useDispatch();\n\n    const [checking, setChecking] = useState(true);\n    const [isLogedIn, setIsLogedIn] = useState(false);\n\n    useEffect(() => {\n        firebase.auth().onAuthStateChanged( (user) => {\n            if (user?.uid) {\n                dispatch( login( user.uid, user.displayName ) );\n                dispatch( loadNotes(user.uid) );\n                setIsLogedIn(true);\n            }else{\n                setIsLogedIn(false);\n            }\n\n            setChecking(false);\n        } )\n    }, [ dispatch, setChecking ]);\n    \n    if ( checking ) {\n        return(\n            <LoadingScreen/>\n        )\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute path='/auth' component={AuthRouter} isLogedIn = { isLogedIn } />\n                    <PrivateRoute exact path='/' component={JournalScreen} isLogedIn = { isLogedIn } />\n\n                    <Redirect to='/auth/login' />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    notes: [],\n    active: null\n}\n\nexport const notesReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.notesActive:\n            return {\n                ...state,\n                active: {\n                    ...action.payload,\n                }\n            }\n        case types.notesLoad:\n            return {\n                ...state,\n                notes: [...action.payload],\n            }\n        case types.notesUpdated:\n            return {\n                ...state,\n                notes: state.notes.map(\n                    note => note.id === action.payload.id ? action.payload.note : note\n                )\n            }\n        case types.notesDelete:\n            return{\n                ...state,\n                active: null,\n                notes: state.notes.filter( note => note.id !== action.payload )\n            }\n        case types.notesLogoutCleaning:\n            return{\n                ...state,\n                active: null,\n                notes: []\n            }\n        default:\n            return state;\n    }\n}","import { types } from \"../types/types\";\n\n\nconst initialState = {\n    loading: false,\n    msg: null\n}\n\nexport const uiReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.uiSetError:\n            return {\n                ...state,\n                msg: action.payload\n            }\n        case types.uiRemoveError:\n            return {\n                ...state,\n                msg: null\n            }\n        case types.uiStartLoading:\n            return {\n                loading: true\n            }\n        case types.uiFinishLoading:\n            return {\n                loading: false\n            }\n        default:\n            return state;\n    }\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { notesReducer } from '../reducers/notesReducer';\nimport { authReducer } from '../reducers/authReducer';\nimport { uiReducer } from '../reducers/uiReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst reducers = combineReducers({\n    auth: authReducer,\n    ui: uiReducer,\n    notes: notesReducer\n});\n\nexport const store = createStore( \n    reducers,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n    );","import {types} from '../types/types';\n\nexport const authReducer = (state = {} , action) => {\n    switch (action.type) {\n        case types.login:\n            return {\n                uid: action.payload.uid,\n                name: action.payload.displayName\n            }\n        case types.logout:\n            return {}\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport { AppRouter } from './routers/AppRouter';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nexport const JournalApp = () => {\n    return (\n        <Provider store = { store }>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/styles.scss';\n\nimport { JournalApp } from './JournalApp';\n\nReactDOM.render(\n    <JournalApp />,\n    document.getElementById('root')\n);"],"sourceRoot":""}